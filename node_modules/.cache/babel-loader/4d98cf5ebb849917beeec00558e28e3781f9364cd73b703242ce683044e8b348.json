{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagar\\\\Downloads\\\\bnb-frontend\\\\website\\\\src\\\\components\\\\hoverbutton.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { Menu, MenuButton, MenuList, MenuItem } from \"@reach/menu-button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CategoryDropdown(props) {\n  _s();\n  let {\n    title\n  } = props;\n  let [isOverButton, setIsOverButton] = useState(false);\n  let [isOverList, setIsOverList] = useState(false);\n  let [isOpen, setIsOpen] = useState();\n  let [isTouchInput, setIsTouchInput] = useState();\n  let [hasClicked, setHasClicked] = useState();\n  let button = useRef(null);\n  useLayoutEffect(() => {\n    if (isOpen && !isOverButton && !isOverList && !isTouchInput) {\n      button.current.click();\n      setIsOpen(false);\n    } else if (!isOpen && (isOverButton || isOverList) && !isTouchInput) {\n      button.current.click();\n      setIsOpen(true);\n    }\n  }, [isOverButton, isOverList]);\n  useEffect(() => {\n    setIsTouchInput(false);\n    setHasClicked(false);\n  }, [hasClicked]);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      ref: button,\n      onTouchStart: () => {\n        setIsTouchInput(true);\n      },\n      onMouseEnter: event => {\n        setIsOverButton(true);\n      },\n      onMouseLeave: event => {\n        setIsOverButton(false);\n      },\n      onClick: () => {\n        setHasClicked(true);\n        setIsOpen(!isOpen);\n      },\n      onKeyDown: () => {\n        setIsOpen(!isOpen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": true,\n        children: \"\\u25BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n      onMouseEnter: event => {\n        setIsOverList(true);\n      },\n      onMouseLeave: event => {\n        setIsOverList(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onSelect: () => {\n          setIsOpen(false);\n        },\n        children: \"Action 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onSelect: () => {\n          setIsOpen(false);\n        },\n        children: \"Action 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryDropdown, \"uX4YeRx2SfLyfC49ljLl7hVn7FI=\");\n_c = CategoryDropdown;\nvar _c;\n$RefreshReg$(_c, \"CategoryDropdown\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","Menu","MenuButton","MenuList","MenuItem","CategoryDropdown","props","title","isOverButton","setIsOverButton","isOverList","setIsOverList","isOpen","setIsOpen","isTouchInput","setIsTouchInput","hasClicked","setHasClicked","button","current","click","event"],"sources":["C:/Users/cagar/Downloads/bnb-frontend/website/src/components/hoverbutton.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport { Menu, MenuButton, MenuList, MenuItem } from \"@reach/menu-button\";\r\n\r\nexport default function CategoryDropdown(props) {\r\n  let { title } = props;\r\n\r\n  let [isOverButton, setIsOverButton] = useState(false);\r\n  let [isOverList, setIsOverList] = useState(false);\r\n  let [isOpen, setIsOpen] = useState();\r\n  let [isTouchInput, setIsTouchInput] = useState();\r\n  let [hasClicked, setHasClicked] = useState();\r\n  let button = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (isOpen && !isOverButton && !isOverList && !isTouchInput) {\r\n      button.current.click();\r\n      setIsOpen(false);\r\n    } else if (!isOpen && (isOverButton || isOverList) && !isTouchInput) {\r\n      button.current.click();\r\n      setIsOpen(true);\r\n    }\r\n  }, [isOverButton, isOverList]);\r\n\r\n  useEffect(() => {\r\n    setIsTouchInput(false);\r\n    setHasClicked(false);\r\n  }, [hasClicked]);\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuButton\r\n        ref={button}\r\n        onTouchStart={() => {\r\n          setIsTouchInput(true);\r\n        }}\r\n        onMouseEnter={event => {\r\n          setIsOverButton(true);\r\n        }}\r\n        onMouseLeave={event => {\r\n          setIsOverButton(false);\r\n        }}\r\n        onClick={() => {\r\n          setHasClicked(true);\r\n          setIsOpen(!isOpen);\r\n        }}\r\n        onKeyDown={() => {\r\n          setIsOpen(!isOpen);\r\n        }}\r\n      >\r\n        <span>{title}</span> <span aria-hidden>â–¾</span>\r\n      </MenuButton>\r\n      <MenuList\r\n        onMouseEnter={event => {\r\n          setIsOverList(true);\r\n        }}\r\n        onMouseLeave={event => {\r\n          setIsOverList(false);\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onSelect={() => {\r\n            setIsOpen(false);\r\n          }}\r\n        >\r\n          Action 1\r\n        </MenuItem>\r\n        <MenuItem\r\n          onSelect={() => {\r\n            setIsOpen(false);\r\n          }}\r\n        >\r\n          Action 2\r\n        </MenuItem>\r\n      </MenuList>\r\n    </Menu>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,SAASC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AAAC;AAE1E,eAAe,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAAA;EAC9C,IAAI;IAAEC;EAAM,CAAC,GAAGD,KAAK;EAErB,IAAI,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,IAAI,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,IAAI,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,EAAE;EACpC,IAAI,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,EAAE;EAChD,IAAI,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,EAAE;EAC5C,IAAIkB,MAAM,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEzBD,eAAe,CAAC,MAAM;IACpB,IAAIc,MAAM,IAAI,CAACJ,YAAY,IAAI,CAACE,UAAU,IAAI,CAACI,YAAY,EAAE;MAC3DI,MAAM,CAACC,OAAO,CAACC,KAAK,EAAE;MACtBP,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM,IAAI,CAACD,MAAM,KAAKJ,YAAY,IAAIE,UAAU,CAAC,IAAI,CAACI,YAAY,EAAE;MACnEI,MAAM,CAACC,OAAO,CAACC,KAAK,EAAE;MACtBP,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC,EAAE,CAACL,YAAY,EAAEE,UAAU,CAAC,CAAC;EAE9Bb,SAAS,CAAC,MAAM;IACdkB,eAAe,CAAC,KAAK,CAAC;IACtBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;EAEhB,oBACE,QAAC,IAAI;IAAA,wBACH,QAAC,UAAU;MACT,GAAG,EAAEE,MAAO;MACZ,YAAY,EAAE,MAAM;QAClBH,eAAe,CAAC,IAAI,CAAC;MACvB,CAAE;MACF,YAAY,EAAEM,KAAK,IAAI;QACrBZ,eAAe,CAAC,IAAI,CAAC;MACvB,CAAE;MACF,YAAY,EAAEY,KAAK,IAAI;QACrBZ,eAAe,CAAC,KAAK,CAAC;MACxB,CAAE;MACF,OAAO,EAAE,MAAM;QACbQ,aAAa,CAAC,IAAI,CAAC;QACnBJ,SAAS,CAAC,CAACD,MAAM,CAAC;MACpB,CAAE;MACF,SAAS,EAAE,MAAM;QACfC,SAAS,CAAC,CAACD,MAAM,CAAC;MACpB,CAAE;MAAA,wBAEF;QAAA,UAAOL;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,KAAC;QAAM,mBAAW;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACpC,eACb,QAAC,QAAQ;MACP,YAAY,EAAEc,KAAK,IAAI;QACrBV,aAAa,CAAC,IAAI,CAAC;MACrB,CAAE;MACF,YAAY,EAAEU,KAAK,IAAI;QACrBV,aAAa,CAAC,KAAK,CAAC;MACtB,CAAE;MAAA,wBAEF,QAAC,QAAQ;QACP,QAAQ,EAAE,MAAM;UACdE,SAAS,CAAC,KAAK,CAAC;QAClB,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA,QAAW,eACX,QAAC,QAAQ;QACP,QAAQ,EAAE,MAAM;UACdA,SAAS,CAAC,KAAK,CAAC;QAClB,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEX;AAAC,GAzEuBR,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}